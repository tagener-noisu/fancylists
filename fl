#!/usr/bin/env ruby
require 'getoptlong'

VERSION = "0.1"

def append(list)
	$stderr.puts "appending to the #{list}"
end

def clear(list)
	$stderr.puts "clearing the #{list}"
end

def list_contents(list)
	$stderr.puts "listing contents of the #{list}"
end

def print_usage
	$stderr.puts <<-EOF
fancylists v.#{VERSION}

Usage:
print contents of the list: fl listname
operations on the list:     fl listname [operation] ...

Operations:
    -a, --append    append lines from the standart input to the list
    -c, --clear     clear the list

Operations executed in the order of appearance
EOF
end


def driver
	list_name = nil
	case (ARGV.length)
	when 0
		print_usage
		return
	when 1
		if (!ARGV[0].match(/^-/))
			list_contents(ARGV.shift)
			return
		else
			print_usage
			return
		end
	else
		list_name = ARGV.shift
	end

	GetoptLong.new(
		['--append', '-a', GetoptLong::NO_ARGUMENT],
		['--clear', '-c', GetoptLong::NO_ARGUMENT]
	).each { |opt, arg|
		case (opt)
		when "--append"
			append(list_name)
		when "--clear"
			clear(list_name)
		end
	}
end

begin
	driver
rescue GetoptLong::InvalidOption
	print_usage
rescue => e
	$stderr.puts(e.message)
end
